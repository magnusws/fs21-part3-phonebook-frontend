{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // dummy data - remove before creating build\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/persons').then(response => {\n      console.log('promise fulfilled');\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const addPerson = event => {\n    // add a new person\n    event.preventDefault();\n    const validInput = newName !== '' && newPhoneNumber !== '' // input in form fields?\n    ? true : false;\n\n    if (validInput) {\n      // if both fields in the form has text\n      const doesAlreadyExist = persons // checks if person already exist\n      .map(person => person.name).includes(newName);\n\n      if (!doesAlreadyExist) {\n        // if a person does not already exist\n        const personObject = {\n          // new person obj\n          name: newName,\n          number: newPhoneNumber,\n          id: persons.length + 1\n        };\n        setPersons(persons.concat(personObject)); // add new person obj\n\n        setNewName('');\n        setNewPhoneNumber('');\n      } else {\n        // alert if person alredy exist\n        alert(`${newName} is already added to phonebook`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onChange: handleSearchChange,\n      value: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newPhoneNumber: newPhoneNumber,\n      handlePhoneNumberChange: handlePhoneNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"FNeKIewzP3rgHcs7xLwWC3Z+F2A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","axios","App","persons","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","search","setSearch","console","log","get","then","response","data","handleNameChange","event","target","value","handlePhoneNumberChange","handleSearchChange","addPerson","preventDefault","validInput","doesAlreadyExist","map","person","name","includes","personObject","number","id","length","concat","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport axios from 'axios'\n\nconst App = () => {\n\n  // dummy data - remove before creating build\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [search, setSearch] = useState('')\n\n  useEffect(()=> {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const addPerson = (event) => {  // add a new person\n    event.preventDefault()\n\n    const validInput = newName !== '' && newPhoneNumber !== '' // input in form fields?\n      ? true \n      : false\n\n    if (validInput) {                    // if both fields in the form has text\n      \n      const doesAlreadyExist = persons         // checks if person already exist\n        .map(person => person.name)\n        .includes(newName)\n      \n      if (!doesAlreadyExist) {            // if a person does not already exist\n\n        const personObject = {            // new person obj\n          name: newName,\n          number: newPhoneNumber,\n          id: persons.length + 1\n        }\n\n        setPersons(persons.concat(personObject))  // add new person obj\n        setNewName('')                           \n        setNewPhoneNumber('')\n\n      } else {                                    // alert if person alredy exist\n        alert(`${newName} is already added to phonebook`)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter onChange={handleSearchChange} value={search}/>\n      <h2>Add a new</h2>\n      <PersonForm \n        onSubmit={addPerson}\n        newName={newName} \n        handleNameChange={handleNameChange}\n        newPhoneNumber={newPhoneNumber}\n        handlePhoneNumberChange={handlePhoneNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}