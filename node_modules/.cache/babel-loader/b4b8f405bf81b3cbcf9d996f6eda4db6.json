{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part2/phonebook/src/components/Persons.js\";\nimport React from \"react\";\nimport Person from './Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Persons = _ref => {\n  let {\n    search,\n    persons,\n    onClick\n  } = _ref;\n\n  if (persons !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filterPersons(search, persons).map(person => /*#__PURE__*/_jsxDEV(Person, {\n          id: person.id,\n          name: person.name,\n          number: person.number,\n          onClick: onClick\n        }, person.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this);\n  }\n}; // Default(no input in search): returns an array with every single person.\n// If search input: returns an array with matching persons if any.\n\n\n_c = Persons;\n\nconst filterPersons = (search, persons) => {\n  if (search !== '') {\n    return persons.filter(person => person.name.toLowerCase().indexOf(search.toLowerCase()) > -1);\n  } else {\n    return persons;\n  }\n};\n\nexport default Persons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Persons\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part2/phonebook/src/components/Persons.js"],"names":["React","Person","Persons","search","persons","onClick","filterPersons","map","person","id","name","number","filter","toLowerCase","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,OAAO,GAAG,QAAgC;AAAA,MAA/B;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAA+B;;AAC9C,MAAGD,OAAO,KAAK,CAAf,EAAkB;AAChB,wBACA;AAAA,6BACE;AAAA,kBACGE,aAAa,CAACH,MAAD,EAASC,OAAT,CAAb,CAA+BG,GAA/B,CAAmCC,MAAM,iBACxC,QAAC,MAAD;AAEE,UAAA,EAAE,EAAEA,MAAM,CAACC,EAFb;AAGE,UAAA,IAAI,EAAED,MAAM,CAACE,IAHf;AAIE,UAAA,MAAM,EAAEF,MAAM,CAACG,MAJjB;AAKE,UAAA,OAAO,EAAEN;AALX,WACOG,MAAM,CAACE,IADd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAeD;AACF,CAlBD,C,CAoBA;AACA;;;KArBMR,O;;AAsBN,MAAMI,aAAa,GAAG,CAACH,MAAD,EAASC,OAAT,KAAqB;AACzC,MAAID,MAAM,KAAK,EAAf,EAAmB;AACjB,WAAQC,OAAO,CAACQ,MAAR,CAAeJ,MAAM,IAC3BA,MAAM,CAACE,IAAP,CAAYG,WAAZ,GAA0BC,OAA1B,CAAkCX,MAAM,CAACU,WAAP,EAAlC,IAA0D,CAAC,CADrD,CAAR;AAED,GAHD,MAGO;AACL,WAAOT,OAAP;AACD;AACF,CAPD;;AASA,eAAeF,OAAf","sourcesContent":["import React from \"react\"\nimport Person from './Person'\n\n\nconst Persons = ({search, persons, onClick}) => {\n  if(persons !== 0) {\n    return (\n    <table>\n      <tbody>\n        {filterPersons(search, persons).map(person =>\n          <Person\n            key={person.name}\n            id={person.id}\n            name={person.name}\n            number={person.number}\n            onClick={onClick}\n          />\n        )}\n      </tbody>\n    </table>\n  )\n  }\n}\n\n// Default(no input in search): returns an array with every single person.\n// If search input: returns an array with matching persons if any.\nconst filterPersons = (search, persons) => {\n  if (search !== '') {\n    return (persons.filter(person =>\n      person.name.toLowerCase().indexOf(search.toLowerCase()) > -1))\n  } else {\n    return persons\n  }\n}\n\nexport default Persons"]},"metadata":{},"sourceType":"module"}