{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = _ref => {\n  let {\n    name,\n    number\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [name, \" \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}; // Check if the key and values og two person objects \n\n\n_c = Person;\n\nconst areThesePersonsEqual = (first, second) => {\n  if (first.name === second.name) return true;\n  if (first.number === second.number) return true;\n  return false;\n}; // this.state.projects.filter(val => \n// val.title.toLowerCase().indexOf(search.toLowerCase()) > -1\n\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [newSeach, setNewSearch] = useState('');\n  const [personsToShow, setPersonsToShow] = useState(persons);\n\n  const addName = event => {\n    var validInput = false;\n    var doesAlreadyExist = false;\n    event.preventDefault();\n\n    if (newName !== '' && newPhoneNumber !== '') {\n      validInput = true;\n    }\n\n    if (validInput) {\n      const personObject = {\n        name: newName,\n        number: newPhoneNumber,\n        id: persons.length + 1\n      };\n      persons.forEach(person => {\n        doesAlreadyExist = areThesePersonsEqual(person, personObject);\n      });\n\n      if (!doesAlreadyExist) {\n        setPersons(persons.concat(personObject));\n        setNewName('');\n        setNewPhoneNumber('');\n      } else {\n        alert(`${newName} is already added to phonebook`);\n      }\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n    setPersonsToShow.filter(person => person.name.toLowerCase().indexOf(newSeach.toLowerCase()) > -1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"filter shown with\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newSeach,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), \"number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newPhoneNumber,\n          onChange: handlePhoneNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: persons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n          name: person.name,\n          number: person.number\n        }, person.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"PTa7hnJ4SjoIRezvb+lIfgtG8EY=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js"],"names":["React","useState","Person","name","number","areThesePersonsEqual","first","second","App","persons","setPersons","id","newName","setNewName","newPhoneNumber","setNewPhoneNumber","newSeach","setNewSearch","personsToShow","setPersonsToShow","addName","event","validInput","doesAlreadyExist","preventDefault","personObject","length","forEach","person","concat","alert","handleNameChange","target","value","handlePhoneNumberChange","handleSearchChange","filter","toLowerCase","indexOf","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Person = ({name, number}) => {\n  return (\n    <tr>\n      <td>\n        {name} {number}\n      </td>\n    </tr>)\n}\n\n// Check if the key and values og two person objects \nconst areThesePersonsEqual = (first, second) => {\n  if (first.name === second.name) return true\n  if (first.number === second.number) return true\n  return false\n}\n// this.state.projects.filter(val => \n// val.title.toLowerCase().indexOf(search.toLowerCase()) > -1\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456', id: 1 },\n    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n  ])\n\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [newSeach, setNewSearch] = useState('')\n  const [personsToShow, setPersonsToShow] = useState(persons)\n\n  const addName = (event) => {\n    var validInput = false\n    var doesAlreadyExist = false\n\n    event.preventDefault()\n\n    if(newName !== '' && newPhoneNumber !== '') {\n      validInput = true\n    }\n\n    if(validInput){\n\n      const personObject = {\n        name: newName,\n        number: newPhoneNumber,\n        id: persons.length + 1\n      }\n\n      persons.forEach(person => {\n        doesAlreadyExist = areThesePersonsEqual(person, personObject)\n      })\n\n      if (!doesAlreadyExist) {\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewPhoneNumber('')\n\n      }else {\n        alert(`${newName} is already added to phonebook`)\n      }\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n    setPersonsToShow.filter(person =>\n      person.name.toLowerCase().indexOf(newSeach.toLowerCase()) > -1)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <p>filter shown with</p>\n      <input\n        value={newSeach}\n        onChange={handleSearchChange}\n      />\n      <h2>Add a new</h2>\n      <form onSubmit={addName}>\n        <div>\n          name:  \n          <input \n            value={newName}\n            onChange={handleNameChange}\n          />\n          <br></br>\n          number:\n          <input\n            value={newPhoneNumber}\n            onChange={handlePhoneNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <table>\n        <tbody>\n          {persons.map(person =>\n            <Person \n              key={person.id} \n              name={person.name} \n              number={person.number}\n            />\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}