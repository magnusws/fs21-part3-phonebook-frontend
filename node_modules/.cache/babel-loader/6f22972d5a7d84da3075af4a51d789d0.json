{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import Filter from './components/Filter'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = _ref => {\n  let {\n    name,\n    number\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [name, \" \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Person;\n\nconst filterPersons = (search, persons) => {\n  if (search !== '') {\n    return persons.filter(person => person.name.toLowerCase().indexOf(search.toLowerCase()) > -1);\n  } else {\n    return persons;\n  }\n}; // Check if the key and values og two person objects \n\n\nconst areThesePersonsEqual = (first, second) => {\n  if (first.name === second.name) return true;\n  if (first.number === second.number) return true;\n  return false;\n};\n\nconst Filter = props => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: props.value,\n    onChange: props.handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Filter;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [newSearch, setNewSearch] = useState('');\n\n  const addName = event => {\n    var validInput = false;\n    var doesAlreadyExist = false;\n    event.preventDefault();\n\n    if (newName !== '' && newPhoneNumber !== '') {\n      validInput = true;\n    }\n\n    if (validInput) {\n      const personObject = {\n        name: newName,\n        number: newPhoneNumber,\n        id: persons.length + 1\n      };\n      persons.forEach(person => {\n        doesAlreadyExist = areThesePersonsEqual(person, personObject);\n      });\n\n      if (!doesAlreadyExist) {\n        setPersons(persons.concat(personObject));\n        setNewName('');\n        setNewPhoneNumber('');\n      } else {\n        alert(`${newName} is already added to phonebook`);\n      }\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const personsToShow = filterPersons(newSearch, persons); // Search filter -> Filter\n  // Input form -> PersonForm\n  // Persons\n  // .. a component that renders all people from the phonebook, and a component that renders a single persons details\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), \"filter shown with:\", /*#__PURE__*/_jsxDEV(Filter, {\n      value: newSearch,\n      handleChange: () => handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), \"number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newPhoneNumber,\n          onChange: handlePhoneNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: personsToShow.map(person => /*#__PURE__*/_jsxDEV(Person, {\n          name: person.name,\n          number: person.number\n        }, person.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"G4qb9l4ztjWPVWTJxQqKkN4vPHE=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"Filter\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js"],"names":["React","useState","Person","name","number","filterPersons","search","persons","filter","person","toLowerCase","indexOf","areThesePersonsEqual","first","second","Filter","props","value","handleChange","App","setPersons","id","newName","setNewName","newPhoneNumber","setNewPhoneNumber","newSearch","setNewSearch","addName","event","validInput","doesAlreadyExist","preventDefault","personObject","length","forEach","concat","alert","handleNameChange","target","handlePhoneNumberChange","handleSearchChange","personsToShow","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n//import Filter from './components/Filter'\n\nconst Person = ({ name, number }) => {\n  return (\n    <tr>\n      <td>\n        {name} {number}\n      </td>\n    </tr>)\n}\n\nconst filterPersons = (search, persons) => {\n  if (search !== '') {\n    return persons.filter(person =>\n      person.name.toLowerCase().indexOf(search.toLowerCase()) > -1)\n  } else {\n    return persons\n  }\n}\n\n// Check if the key and values og two person objects \nconst areThesePersonsEqual = (first, second) => {\n  if (first.name === second.name) return true\n  if (first.number === second.number) return true\n  return false\n}\n\nconst Filter = (props) => {\n  return (\n  <input\n    value={props.value}\n    onChange={props.handleChange}\n  />\n  )\n  }\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456', id: 1 },\n    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n  ])\n\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n\n  const addName = (event) => {\n    var validInput = false\n    var doesAlreadyExist = false\n\n    event.preventDefault()\n\n    if (newName !== '' && newPhoneNumber !== '') {\n      validInput = true\n    }\n\n    if (validInput) {\n\n      const personObject = {\n        name: newName,\n        number: newPhoneNumber,\n        id: persons.length + 1\n      }\n\n      persons.forEach(person => {\n        doesAlreadyExist = areThesePersonsEqual(person, personObject)\n      })\n\n      if (!doesAlreadyExist) {\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewPhoneNumber('')\n\n      } else {\n        alert(`${newName} is already added to phonebook`)\n      }\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const personsToShow = filterPersons(newSearch, persons)\n\n  // Search filter -> Filter\n  // Input form -> PersonForm\n  // Persons\n  // .. a component that renders all people from the phonebook, and a component that renders a single persons details\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      filter shown with:\n      <Filter value={newSearch} handleChange={() => handleSearchChange}/>\n      <h2>Add a new</h2>\n      <form onSubmit={addName}>\n        <div>\n          name:\n          <input\n            value={newName}\n            onChange={handleNameChange}\n          />\n          <br></br>\n          number:\n          <input\n            value={newPhoneNumber}\n            onChange={handlePhoneNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <table>\n        <tbody>\n          {personsToShow.map(person =>\n            <Person\n              key={person.id}\n              name={person.name}\n              number={person.number}\n            />\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}