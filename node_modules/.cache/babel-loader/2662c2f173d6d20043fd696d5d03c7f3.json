{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons'; // Check if the key and values og two person objects \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst areThesePersonsEqual = (first, second) => {\n  if (first.name === second.name) return true;\n  if (first.number === second.number) return true;\n  return false;\n};\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [search, setSearch] = useState('');\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const addPerson = event => {\n    var validInput = false;\n    var doesAlreadyExist = false;\n    event.preventDefault();\n    validInput = newName !== '' && newPhoneNumber !== '' ? true : false;\n\n    if (validInput) {\n      doesAlreadyExist = persons.map(person => person.name).includes(newName);\n\n      if (!doesAlreadyExist) {\n        const personObject = {\n          name: newName,\n          number: newPhoneNumber,\n          id: persons.length + 1\n        };\n        setPersons(persons.concat(personObject));\n        setNewName('');\n        setNewPhoneNumber('');\n      } else {\n        alert(`${newName} is already added to phonebook`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onChange: handleSearchChange,\n      value: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newPhoneNumber: newPhoneNumber,\n      handlePhoneNumberChange: handlePhoneNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EouBKYvbhfqb/T5/uvcfC+C+700=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js"],"names":["React","useState","Filter","PersonForm","Persons","areThesePersonsEqual","first","second","name","number","App","persons","setPersons","id","newName","setNewName","newPhoneNumber","setNewPhoneNumber","search","setSearch","handleNameChange","event","target","value","handlePhoneNumberChange","handleSearchChange","addPerson","validInput","doesAlreadyExist","preventDefault","map","person","includes","personObject","length","concat","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\n// Check if the key and values og two person objects \nconst areThesePersonsEqual = (first, second) => {\n  if (first.name === second.name) return true\n  if (first.number === second.number) return true\n  return false\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456', id: 1 },\n    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n  ])\n\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [search, setSearch] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    var validInput = false\n    var doesAlreadyExist = false\n    \n    event.preventDefault()\n\n    validInput = newName !== '' && newPhoneNumber !== '' \n      ? true \n      : false\n\n    if (validInput) {\n\n      doesAlreadyExist = persons\n        .map(person => person.name)\n        .includes(newName)\n\n      if (!doesAlreadyExist) {\n        const personObject = {\n          name: newName,\n          number: newPhoneNumber,\n          id: persons.length + 1\n        }\n        setPersons(persons.concat(personObject))\n        setNewName('')\n        setNewPhoneNumber('')\n      } else {\n        alert(`${newName} is already added to phonebook`)\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter onChange={handleSearchChange} value={search}/>\n      <h2>Add a new</h2>\n      <PersonForm \n        onSubmit={addPerson}\n        newName={newName} \n        handleNameChange={handleNameChange}\n        newPhoneNumber={newPhoneNumber}\n        handlePhoneNumberChange={handlePhoneNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}