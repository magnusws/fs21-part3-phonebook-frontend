{"ast":null,"code":"var _jsxFileName = \"/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from './services/personService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // dummy data - remove before creating build\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const addPerson = event => {\n    // add a new person\n    event.preventDefault();\n    const validInput = newName !== '' && newPhoneNumber !== '' // input in form fields?\n    ? true : false;\n\n    if (validInput) {\n      // if both fields in the form has text\n      const doesAlreadyExist = persons // checks if person already exist\n      .map(person => person.name).includes(newName);\n\n      if (!doesAlreadyExist) {\n        // if a person does not already exist\n        const personObject = {\n          // new person obj\n          name: newName,\n          number: newPhoneNumber\n        };\n        personService.create(personObject).then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewPhoneNumber('');\n        }).catch(error => console.log(error.message));\n      } else {\n        // alert if person alredy exist\n        updatePerson();\n      }\n    }\n  };\n\n  const updatePerson = () => {\n    if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n      const currentPersonObjArray = persons.filter(p => p.name === newName); // person obj to be replaced\n\n      const currentPersonObj = currentPersonObjArray[0];\n      console.log(currentPersonObj.id);\n      const newPersonObject = {\n        // new person obj\n        name: currentPersonObj.name,\n        number: newPhoneNumber\n      };\n      personService.update(parseInt(currentPersonObj.id), newPersonObject).then(returnedPerson => {\n        console.log(returnedPerson);\n        setPersons(persons.map(person => person.id === currentPersonObj.id ? returnedPerson : person));\n      }).catch(error => console.log(error.message));\n    }\n  };\n\n  const removePerson = event => {\n    const id = parseInt(event.target.value);\n    const personObj = persons.find(p => p.id === id);\n\n    if (window.confirm(`Are you sure you want to delete ${personObj.name}?`)) {\n      personService.remove(id).then(setPersons(persons.filter(p => p.id !== id))).catch(error => console.log(error.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onChange: handleSearchChange,\n      value: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newPhoneNumber: newPhoneNumber,\n      handlePhoneNumberChange: handlePhoneNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons,\n      search: search,\n      onClick: removePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"FNeKIewzP3rgHcs7xLwWC3Z+F2A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Magnus/Documents/fs22/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","personService","App","persons","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","search","setSearch","getAll","then","initialPersons","handleNameChange","event","target","value","handlePhoneNumberChange","handleSearchChange","addPerson","preventDefault","validInput","doesAlreadyExist","map","person","name","includes","personObject","number","create","returnedPerson","concat","catch","error","console","log","message","updatePerson","window","confirm","currentPersonObjArray","filter","p","currentPersonObj","id","newPersonObject","update","parseInt","removePerson","personObj","find","remove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\n\nconst App = () => {\n\n  // dummy data - remove before creating build\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [search, setSearch] = useState('')\n\n  useEffect(()=> {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const addPerson = (event) => {  // add a new person\n    event.preventDefault()\n\n    const validInput = newName !== '' && newPhoneNumber !== '' // input in form fields?\n      ? true \n      : false\n\n    if (validInput) {                    // if both fields in the form has text\n      \n      const doesAlreadyExist = persons         // checks if person already exist\n        .map(person => person.name)\n        .includes(newName)\n      \n      if (!doesAlreadyExist) {            // if a person does not already exist\n\n        const personObject = {            // new person obj\n          name: newName,\n          number: newPhoneNumber,\n        }\n\n        personService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewPhoneNumber('')\n          })\n          .catch(error => console.log(error.message))\n\n      } else {                                    // alert if person alredy exist\n        updatePerson()\n      }\n    }\n  }\n\n  const updatePerson = () => {\n    if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n      const currentPersonObjArray = persons.filter(p => p.name === newName) // person obj to be replaced\n      const currentPersonObj = currentPersonObjArray[0]\n      console.log(currentPersonObj.id)\n      const newPersonObject = {   // new person obj\n        name: currentPersonObj.name,\n        number: newPhoneNumber,\n      }\n      personService\n        .update(parseInt(currentPersonObj.id), newPersonObject)\n        .then(returnedPerson => {\n          console.log(returnedPerson)\n          setPersons(persons.map(person => person.id === currentPersonObj.id ? returnedPerson : person))\n        })\n        .catch(error => console.log(error.message))\n    }\n  }\n\n  const removePerson = (event) => {\n    const id = parseInt(event.target.value)\n    const personObj = persons.find(p => p.id === id)\n\n    if (window.confirm(`Are you sure you want to delete ${personObj.name}?`)) {\n      personService\n        .remove(id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n        .catch(error => console.log(error.message))\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter onChange={handleSearchChange} value={search}/>\n      <h2>Add a new</h2>\n      <PersonForm \n        onSubmit={addPerson}\n        newName={newName} \n        handleNameChange={handleNameChange}\n        newPhoneNumber={newPhoneNumber}\n        handlePhoneNumberChange={handlePhoneNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search} onClick={removePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}