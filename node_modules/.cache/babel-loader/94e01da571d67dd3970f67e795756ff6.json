{"ast":null,"code":"import _slicedToArray from\"/Users/Magnus/Documents/fs21_part3_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Filter from'./components/Filter';import PersonForm from'./components/PersonForm';import Persons from'./components/Persons';import personService from'./services/personService';import Notification from'./components/Notification';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),persons=_useState2[0],setPersons=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newPhoneNumber=_useState6[0],setNewPhoneNumber=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),search=_useState8[0],setSearch=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),notification=_useState10[0],setNotification=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];useEffect(function(){personService.getAll().then(function(initialPersons){setPersons(initialPersons);});},[]);var handleNameChange=function handleNameChange(event){setNewName(event.target.value);};var handlePhoneNumberChange=function handlePhoneNumberChange(event){setNewPhoneNumber(event.target.value);};var handleSearchChange=function handleSearchChange(event){setSearch(event.target.value);};var addPerson=function addPerson(event){// add a new person\nevent.preventDefault();var validInput=newName!==''&&newPhoneNumber!==''// input in form fields?\n?true:false;if(validInput){// if both fields in the form has text\nvar doesAlreadyExist=persons// checks if person already exist\n.map(function(person){return person.name.toLowerCase();}).includes(newName.toLowerCase());if(!doesAlreadyExist){// if a person does not already exist\nvar personObject={// new person obj\nname:newName,number:newPhoneNumber};personService.create(personObject).then(function(returnedPerson){setPersons(persons.concat(returnedPerson));setNewName('');setNewPhoneNumber('');setNotification(\"\".concat(returnedPerson.name,\" was added to the phonebook!\"));setTimeout(function(){setNotification(null);},3000);}).catch(function(error){setError(true);setNotification(error.response.message);setTimeout(function(){setNotification(null);setError(false);},3000);});}else{// alert if person alredy exist\nupdatePerson();}}};var updatePerson=function updatePerson(){if(window.confirm(\"\".concat(newName,\" is already added to phonebook, replace old number with a new one?\"))){var currentPerson=persons.find(function(p){return p.name===newName;});var newPerson={// new person obj\nname:currentPerson.name,number:newPhoneNumber};personService.update(currentPerson.id,newPerson).then(function(returnedPerson){console.log(returnedPerson);// replaces old object with updated object\nsetPersons(persons.map(function(person){return person.id===currentPerson.id?returnedPerson:person;}));setNotification(\"\".concat(returnedPerson.name,\"'s phonenumber was updated!\"));setTimeout(function(){setNotification(null);},3000);}).catch(function(error){console.log(error.message);setPersons(persons.filter(function(p){return p.id!==currentPerson.id;}));setError(true);setNotification(\"Information of \".concat(currentPerson.name,\" has already been removed from server.\"));setTimeout(function(){setNotification(null);setError(false);},3000);});}};var removePerson=function removePerson(event){var id=event.target.value;var personObj=persons.find(function(person){return person.id===id;});if(window.confirm(\"Are you sure you want to delete \".concat(personObj.name,\"?\"))){personService.remove(id).then(setPersons(persons.filter(function(p){return p.id!==id;}))).catch(function(error){setNotification(\"\".concat(error.response.data));setTimeout(function(){setNotification(null);},3000);});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(Notification,{message:notification,isError:error}),/*#__PURE__*/_jsx(Filter,{onChange:handleSearchChange,value:search}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add a new\"}),/*#__PURE__*/_jsx(PersonForm,{onSubmit:addPerson,newName:newName,handleNameChange:handleNameChange,newPhoneNumber:newPhoneNumber,handlePhoneNumberChange:handlePhoneNumberChange}),/*#__PURE__*/_jsx(\"h2\",{children:\"Numbers\"}),/*#__PURE__*/_jsx(Persons,{persons:persons,search:search,onClick:removePerson})]});};export default App;","map":{"version":3,"sources":["/Users/Magnus/Documents/fs21_part3_frontend/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","personService","Notification","App","persons","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","search","setSearch","notification","setNotification","error","setError","getAll","then","initialPersons","handleNameChange","event","target","value","handlePhoneNumberChange","handleSearchChange","addPerson","preventDefault","validInput","doesAlreadyExist","map","person","name","toLowerCase","includes","personObject","number","create","returnedPerson","concat","setTimeout","catch","response","message","updatePerson","window","confirm","currentPerson","find","p","newPerson","update","id","console","log","filter","removePerson","personObj","remove","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [error, setError] = useState(false)\n\n  useEffect(()=> {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const addPerson = (event) => {  // add a new person\n    event.preventDefault()\n\n    const validInput = newName !== '' && newPhoneNumber !== '' // input in form fields?\n      ? true \n      : false\n\n    if (validInput) {                    // if both fields in the form has text\n      \n      const doesAlreadyExist = persons         // checks if person already exist\n        .map(person => person.name.toLowerCase())\n        .includes(newName.toLowerCase())\n      \n      if (!doesAlreadyExist) {            // if a person does not already exist\n\n        const personObject = {            // new person obj\n          name: newName,\n          number: newPhoneNumber,\n        }\n\n        personService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewPhoneNumber('')\n            setNotification(`${returnedPerson.name} was added to the phonebook!`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setError(true)\n            setNotification(error.response.message)\n            setTimeout(() => {\n              setNotification(null)\n              setError(false)\n            }, 3000)\n          })\n\n      } else {                                    // alert if person alredy exist\n        updatePerson()\n      }\n    }\n  }\n\n  const updatePerson = () => {\n    if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n      const currentPerson = persons.find(p => p.name === newName)\n\n      const newPerson = {   // new person obj\n        name: currentPerson.name,\n        number: newPhoneNumber,\n      }\n\n      personService\n        .update(currentPerson.id, newPerson)\n        .then(returnedPerson => {\n          console.log(returnedPerson)\n          // replaces old object with updated object\n          setPersons(persons.map(person => person.id === currentPerson.id \n            ? returnedPerson \n            : person\n          ))\n          setNotification(`${returnedPerson.name}'s phonenumber was updated!`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        })\n        .catch(error => {\n          console.log(error.message)\n          setPersons(persons.filter(p => p.id !== currentPerson.id))\n          setError(true)\n          setNotification(`Information of ${currentPerson.name} has already been removed from server.`)\n          setTimeout(() => {\n            setNotification(null)\n            setError(false)\n          }, 3000)\n        })\n    }\n  }\n\n\n  const removePerson = (event) => {\n    const id = event.target.value\n    const personObj = persons.find(person => person.id === id)\n\n    if (window.confirm(`Are you sure you want to delete ${personObj.name}?`)) {\n      personService\n        .remove(id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n        .catch(error => {\n          setNotification(`${error.response.data}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} isError={error}/>\n      <Filter onChange={handleSearchChange} value={search}/>\n      <h2>Add a new</h2>\n      <PersonForm \n        onSubmit={addPerson}\n        newName={newName} \n        handleNameChange={handleNameChange}\n        newPhoneNumber={newPhoneNumber}\n        handlePhoneNumberChange={handlePhoneNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search} onClick={removePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}