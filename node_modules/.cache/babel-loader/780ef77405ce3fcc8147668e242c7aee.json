{"ast":null,"code":"import React from\"react\";import Person from'./Person';import{jsx as _jsx}from\"react/jsx-runtime\";var Persons=function Persons(_ref){var search=_ref.search,persons=_ref.persons,onClick=_ref.onClick;if(persons!==0){return/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:filterPersons(search,persons).map(function(person){return/*#__PURE__*/_jsx(Person,{id:person.id,name:person.name,number:person.number,onClick:onClick},person.name);})})});}};// Default(no input in search): returns an array with every single person.\n// If search input: returns an array with matching persons if any.\nvar filterPersons=function filterPersons(search,persons){if(search!==''){return persons.filter(function(person){return person.name.toLowerCase().indexOf(search.toLowerCase())>-1;});}else{return persons;}};export default Persons;","map":{"version":3,"sources":["/Users/Magnus/Documents/fs21_part3_frontend/src/components/Persons.js"],"names":["React","Person","Persons","search","persons","onClick","filterPersons","map","person","id","name","number","filter","toLowerCase","indexOf"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,2CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAgC,IAA9BC,CAAAA,MAA8B,MAA9BA,MAA8B,CAAtBC,OAAsB,MAAtBA,OAAsB,CAAbC,OAAa,MAAbA,OAAa,CAC9C,GAAGD,OAAO,GAAK,CAAf,CAAkB,CAChB,mBACA,oCACE,uBACGE,aAAa,CAACH,MAAD,CAASC,OAAT,CAAb,CAA+BG,GAA/B,CAAmC,SAAAC,MAAM,qBACxC,KAAC,MAAD,EAEE,EAAE,CAAEA,MAAM,CAACC,EAFb,CAGE,IAAI,CAAED,MAAM,CAACE,IAHf,CAIE,MAAM,CAAEF,MAAM,CAACG,MAJjB,CAKE,OAAO,CAAEN,OALX,EACOG,MAAM,CAACE,IADd,CADwC,EAAzC,CADH,EADF,EADA,CAeD,CACF,CAlBD,CAoBA;AACA;AACA,GAAMJ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACH,MAAD,CAASC,OAAT,CAAqB,CACzC,GAAID,MAAM,GAAK,EAAf,CAAmB,CACjB,MAAQC,CAAAA,OAAO,CAACQ,MAAR,CAAe,SAAAJ,MAAM,QAC3BA,CAAAA,MAAM,CAACE,IAAP,CAAYG,WAAZ,GAA0BC,OAA1B,CAAkCX,MAAM,CAACU,WAAP,EAAlC,EAA0D,CAAC,CADhC,EAArB,CAAR,CAED,CAHD,IAGO,CACL,MAAOT,CAAAA,OAAP,CACD,CACF,CAPD,CASA,cAAeF,CAAAA,OAAf","sourcesContent":["import React from \"react\"\nimport Person from './Person'\n\n\nconst Persons = ({search, persons, onClick}) => {\n  if(persons !== 0) {\n    return (\n    <table>\n      <tbody>\n        {filterPersons(search, persons).map(person =>\n          <Person\n            key={person.name}\n            id={person.id}\n            name={person.name}\n            number={person.number}\n            onClick={onClick}\n          />\n        )}\n      </tbody>\n    </table>\n  )\n  }\n}\n\n// Default(no input in search): returns an array with every single person.\n// If search input: returns an array with matching persons if any.\nconst filterPersons = (search, persons) => {\n  if (search !== '') {\n    return (persons.filter(person =>\n      person.name.toLowerCase().indexOf(search.toLowerCase()) > -1))\n  } else {\n    return persons\n  }\n}\n\nexport default Persons"]},"metadata":{},"sourceType":"module"}